{"version":3,"file":"src_app_layout_layout_module_ts.js","mappings":"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","sources":["./src/app/layout/components/sidebar/sidebar.component.ts","./src/app/layout/components/sidebar/sidebar.component.html","./src/app/layout/components/topnav/topnav.component.ts","./src/app/layout/components/topnav/topnav.component.html","./src/app/layout/layout-routing.module.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/layout/layout.module.ts","./src/app/layout/nav/nav.component.ts","./src/app/layout/nav/nav.component.html","./src/app/layout/screen2/screen2.component.ts","./src/app/layout/screen2/screen2.component.html","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./node_modules/@angular/material/fesm2020/divider.mjs","./node_modules/@angular/material/fesm2020/icon.mjs","./node_modules/@angular/material/fesm2020/list.mjs","./node_modules/@angular/material/fesm2020/menu.mjs","./node_modules/@angular/material/fesm2020/sidenav.mjs","./node_modules/@angular/material/fesm2020/toolbar.mjs"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n    public showMenu: string;\n    constructor() {}\n\n    ngOnInit() {\n        this.showMenu = '';\n    }\n\n    addExpandClass(element: any) {\n        if (element === this.showMenu) {\n            this.showMenu = '0';\n        } else {\n            this.showMenu = element;\n        }\n    }\n}\n","<div id=\"sidebar\">\n    <mat-nav-list>\n        <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/dashboard']\">\n            <mat-icon class=\"sidenav-icon\">dashboard</mat-icon> {{ 'Dashboard' | translate }}\n        </a>\n        <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/screen1']\">\n            <mat-icon class=\"sidenav-icon\">build</mat-icon> {{ 'Screen1' | translate }}\n        </a>\n        <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/screen2']\">\n            <mat-icon class=\"sidenav-icon\">people</mat-icon> {{ 'Screen2' | translate }}\n        </a>\n    </mat-nav-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-topnav',\n    templateUrl: './topnav.component.html',\n    styleUrls: ['./topnav.component.scss']\n})\nexport class TopnavComponent implements OnInit {\n    public pushRightClass: string;\n\n    constructor(public router: Router, private translate: TranslateService) {\n        this.router.events.subscribe(val => {\n            if (val instanceof NavigationEnd && window.innerWidth <= 992 && this.isToggled()) {\n                this.toggleSidebar();\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.pushRightClass = 'push-right';\n    }\n\n    isToggled(): boolean {\n        const dom: Element = document.querySelector('body');\n        return dom.classList.contains(this.pushRightClass);\n    }\n\n    toggleSidebar() {\n        const dom: any = document.querySelector('body');\n        dom.classList.toggle(this.pushRightClass);\n    }\n\n    onLoggedout() {\n        localStorage.removeItem('isLoggedin');\n        this.router.navigate(['/login']);\n    }\n\n    changeLang(language: string) {\n        this.translate.use(language);\n    }\n}\n","<mat-toolbar color=\"primary\" class=\"fix-nav\">\n    <button type=\"button\" mat-icon-button class=\"visible-md\" (click)=\"toggleSidebar()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n    </button>\n    <div class=\"nav-brand\">\n        SB Admin Material\n    </div>\n    <form class=\"hidden-sm\" style=\"margin-left: 20px; margin-top: 5px\">\n        <mat-form-field>\n            <input matInput [placeholder]=\"'Search' | translate\">\n        </mat-form-field>\n    </form>\n    <span class=\"nav-spacer\"></span>\n    <a href=\"https://github.com/start-javascript/sb-admin-material/archive/master.zip\" class=\"hidden-sm\" mat-raised-button style=\"margin-right: 10px\">\n        <mat-icon>cloud_download</mat-icon> {{ 'Download Now' | translate }}\n    </a>\n    <button class=\"hidden-sm\" mat-icon-button [matMenuTriggerFor]=\"language\">\n        <mat-icon>language</mat-icon>\n    </button>\n    <mat-menu #language=\"matMenu\">\n        <button mat-menu-item (click)=\"changeLang('en')\">\n            <span>{{ 'English' | translate }}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLang('fr')\">\n            <span>{{ 'French' | translate }}</span>\n        </button>\n        <button mat-menu-item (click)=\"changeLang('ur')\">\n            <span>{{ 'Urdu' | translate }}s</span>\n        </button>\n    </mat-menu>\n    <button class=\"hidden-sm\" mat-icon-button [matMenuTriggerFor]=\"profile\">\n        <mat-icon>account_circle</mat-icon>\n    </button>\n    <mat-menu #profile=\"matMenu\">\n        <button mat-menu-item>\n            <mat-icon>person</mat-icon>\n            <span>{{ 'Profile' | translate }}</span>\n        </button>\n        <button mat-menu-item>\n            <mat-icon>inbox</mat-icon>\n            <span>{{ 'Inbox' | translate }}</span>\n        </button>\n        <button mat-menu-item>\n            <mat-icon>settings</mat-icon>\n            <span>{{ 'Settings' | translate }}</span>\n        </button>\n    </mat-menu>\n    <button mat-icon-button (click)=\"onLoggedout()\">\n        <mat-icon>exit_to_app</mat-icon>\n    </button>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LayoutComponent } from './layout.component';\r\nimport { Screen1Component } from './screen1/screen1.component';\r\nimport { Screen2Component } from './screen2/screen2.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                redirectTo: 'dashboard',\r\n                pathMatch: 'full'\r\n            },\r\n            {\r\n                path: 'dashboard',\r\n                loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n            },\r\n            {\r\n                path: 'screen1',\r\n                loadChildren: () => import('./screen1/screen1.module').then(m => m.Screen1Module)\r\n            },\r\n            {\r\n                path: 'screen2',\r\n                component: Screen2Component\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class LayoutRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-layout',\n    templateUrl: './layout.component.html',\n    styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<!-- <app-nav></app-nav> -->\n<app-topnav></app-topnav>\n<app-sidebar></app-sidebar>\n<div class=\"main-container\">\n    <router-outlet></router-outlet>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopnavComponent } from './components/topnav/topnav.component';\nimport { LayoutRoutingModule } from './layout-routing.module';\nimport { LayoutComponent } from './layout.component';\nimport { NavComponent } from './nav/nav.component';\nimport { Screen2Component } from './screen2/screen2.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutRoutingModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatInputModule,\n        MatMenuModule,\n        MatListModule,\n        TranslateModule\n    ],\n    declarations: [Screen2Component, LayoutComponent, NavComponent, TopnavComponent, SidebarComponent, ]\n\n})\nexport class LayoutModule { }\n","import { Observable } from 'rxjs';\n\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-nav',\n    templateUrl: './nav.component.html',\n    styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent {\n    isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(\n        Breakpoints.Handset\n    );\n    constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport=\"true\" [attr.role]=\"isHandset ? 'dialog' : 'navigation'\" [mode]=\"(isHandset | async)!.matches ? 'over' : 'side'\"\n        [opened]=\"!(isHandset | async)!.matches\">\n        <mat-toolbar color=\"primary\">SB Admin Marerial</mat-toolbar>\n        <mat-nav-list>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/dashboard']\">\n                <mat-icon class=\"sidenav-icon\">dashboard</mat-icon> Dashbard\n            </a>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/screen1']\">\n                <mat-icon class=\"sidenav-icon\">build</mat-icon> Screen1\n            </a>\n            <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/screen2']\">\n                <mat-icon class=\"sidenav-icon\">people</mat-icon> Screen2\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-screen2',\n  templateUrl: './screen2.component.html',\n  styleUrls: ['./screen2.component.scss']\n})\nexport class Screen2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  screen2 works!\n</p>\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n}\nMatDivider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatDivider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDividerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] });\nMatDividerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS classes to apply when an `<mat-icon>` component has no icon name, url, or font\n         * specified. The default 'material-icons' value assumes that the material icon font has been\n         * loaded as described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = ['material-icons'];\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    setDefaultFontSetClass(...classNames) {\n        this._defaultFontSetClass = classNames;\n        return this;\n    }\n    /**\n     * Returns the CSS classes to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }]; } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/** Injection token to be used to override the default options for `mat-icon`. */\nconst MAT_ICON_DEFAULT_OPTIONS = new InjectionToken('MAT_ICON_DEFAULT_OPTIONS');\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler, defaults) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        this._previousFontSetClass = [];\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.fontSet) {\n                this.fontSet = defaults.fontSet;\n            }\n        }\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClasses = (this.fontSet\n            ? [this._iconRegistry.classNameForFontAlias(this.fontSet)]\n            : this._iconRegistry.getDefaultFontSetClass()).filter(className => className.length > 0);\n        this._previousFontSetClass.forEach(className => elem.classList.remove(className));\n        fontSetClasses.forEach(className => elem.classList.add(className));\n        this._previousFontSetClass = fontSetClasses;\n        if (this.fontIcon !== this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }, { token: MAT_ICON_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-hidden']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_ICON_LOCATION]\n                }] }, { type: i0.ErrorHandler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_ICON_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIconModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_DEFAULT_OPTIONS, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, EventEmitter, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nconst _MatListBase = mixinDisabled(mixinDisableRipple(class {\n}));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nconst _MatListItemMixinBase = mixinDisableRipple(class {\n});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatNavList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatNavList, selector: \"mat-nav-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-nav-list mat-list-base\" }, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', host: {\n                        'role': 'navigation',\n                        'class': 'mat-nav-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\"] }]\n        }] });\nclass MatList extends _MatListBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatList, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatList, selector: \"mat-list, mat-action-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { classAttribute: \"mat-list mat-list-base\" }, providers: [{ provide: MAT_LIST, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list, mat-action-list', exportAs: 'matList', host: {\n                        'class': 'mat-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_LIST, useExisting: MatList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListAvatarCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatListAvatarCssMatStyler, selector: \"[mat-list-avatar], [matListAvatar]\", host: { classAttribute: \"mat-list-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-avatar], [matListAvatar]',\n                    host: { 'class': 'mat-list-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListIconCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListIconCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatListIconCssMatStyler, selector: \"[mat-list-icon], [matListIcon]\", host: { classAttribute: \"mat-list-icon\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListIconCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-icon], [matListIcon]',\n                    host: { 'class': 'mat-list-icon' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListSubheaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatListSubheaderCssMatStyler, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-subheader\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    host: { 'class': 'mat-subheader' },\n                }]\n        }] });\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._list && this._list.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return (!this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple));\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_NAV_LIST, optional: true }, { token: MAT_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatListItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\" }, classAttribute: \"mat-list-item mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-list-item-content\\\">\\n  <span class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </span>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <span class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></span>\\n\\n  <ng-content></ng-content>\\n</span>\\n\", dependencies: [{ kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-list-item mat-focus-indicator',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    }, inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-list-item-content\\\">\\n  <span class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </span>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <span class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></span>\\n\\n  <ng-content></ng-content>\\n</span>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_NAV_LIST]\n                }] }, { type: MatList, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_LIST]\n                }] }]; }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatSelectionListBase = mixinDisableRipple(class {\n});\nconst _MatListOptionBase = mixinDisableRipple(class {\n});\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() {\n        return this._color || this.selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || (this.selectionList && this.selectionList.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this.selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(this._value, value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent || '' : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSelectionList) }], target: i0.ɵɵFactoryTarget.Component });\nMatListOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatListOption, selector: \"mat-list-option\", inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", disabled: \"disabled\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"focus\": \"_handleFocus()\", \"blur\": \"_handleBlur()\", \"click\": \"_handleClick()\" }, properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-list-single-selected-option\": \"selected && !selectionList.multiple\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled\", \"attr.tabindex\": \"-1\" }, classAttribute: \"mat-list-item mat-list-option mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: i1.MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', inputs: ['disableRipple'], host: {\n                        'role': 'option',\n                        'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                        '(focus)': '_handleFocus()',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_handleClick()',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                        // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                        // its theme.\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        // Even though accent is the default, we need to set this class anyway, because the  list might\n                        // be placed inside a parent that has one of the other colors with a higher specificity.\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabindex]': '-1',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatSelectionList)]\n                }] }]; }, propDecorators: { _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], selectedChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text']\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, _changeDetector, _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        this._focusMonitor\n            .monitor(this._element)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            if (origin === 'keyboard' || origin === 'program') {\n                let toFocus = 0;\n                for (let i = 0; i < this.options.length; i++) {\n                    if (this.options.get(i)?.selected) {\n                        toFocus = i;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(toFocus);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A &&\n                    this.multiple &&\n                    hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple &&\n            (keyCode === UP_ARROW || keyCode === DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n        return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nMatSelectionList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatSelectionList, selector: \"mat-selection-list\", inputs: { disableRipple: \"disableRipple\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_keydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.tabindex\": \"_tabIndex\" }, classAttribute: \"mat-selection-list mat-list-base\" }, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], queries: [{ propertyName: \"options\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', inputs: ['disableRipple'], host: {\n                        'role': 'listbox',\n                        'class': 'mat-selection-list mat-list-base',\n                        '(keydown)': '_keydown($event)',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabindex]': '_tabIndex',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}button.mat-list-item,button.mat-list-option{padding:0;width:100%;background:none;color:inherit;border:none;outline:inherit;-webkit-tap-highlight-color:rgba(0,0,0,0);text-align:left}[dir=rtl] button.mat-list-item,[dir=rtl] button.mat-list-option{text-align:right}button.mat-list-item::-moz-focus-inner,button.mat-list-option::-moz-focus-inner{border:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:rgba(0,0,0,0);width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{display:block;top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i3.FocusMonitor }]; }, propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListModule, declarations: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption], imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], exports: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule] });\nMatListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListModule, imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule, MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                    exports: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatPseudoCheckboxModule,\n                        MatSelectionList,\n                        MatListOption,\n                        MatDividerModule,\n                    ],\n                    declarations: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatSelectionList,\n                        MatListOption,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, takeUntil, filter, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        this._changeDetectorRef?.markForCheck();\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n        super();\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        _parentMenu?.addItem?.(this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return clone.textContent?.trim() || '';\n    }\n    _setHighlighted(isHighlighted) {\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        this._changeDetectorRef?.markForCheck();\n    }\n    _hasFocus() {\n        return this._document && this._document.activeElement === this._getHostElement();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_PANEL]\n                }, {\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions, \n    // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n    _changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n        this._directDescendantItems.changes.subscribe((itemsList) => {\n            // Move focus to another item, if the active item is removed from the list.\n            // We need to debounce the callback, because multiple items might be removed\n            // in quick succession.\n            const manager = this._keyManager;\n            if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n                const items = itemsList.toArray();\n                const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n                if (items[index] && !items[index].disabled) {\n                    manager.setActiveItem(index);\n                }\n                else {\n                    manager.setNextItemActive();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n                return;\n        }\n        // Don't allow the event to propagate if we've already handled it, or it may\n        // end up reaching other overlays that were opened earlier (see #22694).\n        event.stopPropagation();\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // Wait for `onStable` to ensure iOS VoiceOver screen reader focuses the first item (#24735).\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            let menuPanel = null;\n            if (this._directDescendantItems.length) {\n                // Because the `mat-menuPanel` is at the DOM insertion point, not inside the overlay, we don't\n                // have a nice way of getting a hold of the menuPanel panel. We can't use a `ViewChild` either\n                // because the panel is inside an `ng-template`. We work around it by starting from one of\n                // the items and walking up the DOM.\n                menuPanel = this._directDescendantItems.first._getHostElement().closest('[role=\"menu\"]');\n            }\n            // If an item in the menuPanel is already focused, avoid overriding the focus.\n            if (!menuPanel || !menuPanel.contains(document.activeElement)) {\n                const manager = this._keyManager;\n                manager.setFocusOrigin(origin).setFirstItemActive();\n                // If there's no active item at this point, it means that all the items are disabled.\n                // Move focus to the menuPanel panel so keyboard events like Escape still work. Also this will\n                // give _some_ feedback to screen readers.\n                if (!manager.activeItem && menuPanel) {\n                    menuPanel.focus();\n                }\n            }\n        });\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n        // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n        this._changeDetectorRef?.markForCheck();\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions, changeDetectorRef) {\n        super(elementRef, ngZone, defaultOptions, changeDetectorRef);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px;position:relative}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px;position:relative}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @deprecated No longer being used. Will be removed.\n * @breaking-change 15.0.0\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        const menu = this.menu;\n        if (this._menuOpen || !menu) {\n            return;\n        }\n        const overlayRef = this._createOverlay(menu);\n        const overlayConfig = overlayRef.getConfig();\n        const positionStrategy = overlayConfig.positionStrategy;\n        this._setPosition(menu, positionStrategy);\n        overlayConfig.hasBackdrop =\n            menu.hasBackdrop == null ? !this.triggersSubmenu() : menu.hasBackdrop;\n        overlayRef.attach(this._getPortal(menu));\n        if (menu.lazyContent) {\n            menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu(menu);\n        if (menu instanceof _MatMenuBase) {\n            menu._startAnimation();\n            menu._directDescendantItems.changes.pipe(takeUntil(menu.close)).subscribe(() => {\n                // Re-adjust the position without locking when the amount of items\n                // changes so that the overlay is allowed to pick a new optimal position.\n                positionStrategy.withLockedPosition(false).reapplyLastPosition();\n                positionStrategy.withLockedPosition(true);\n            });\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu?.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        this._overlayRef?.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            menu?.lazyContent?.detach();\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu(menu) {\n        menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        menu.direction = this.dir;\n        this._setMenuElevation(menu);\n        menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation(menu) {\n        if (menu.setElevation) {\n            let depth = 0;\n            let parentMenu = menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay(menu) {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig(menu);\n            this._subscribeToPositions(menu, config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig(menu) {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(menu, position) {\n        if (menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                // @breaking-change 15.0.0 Remove null check for `ngZone`.\n                // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n                // updating something in the view so we need to bring it back in.\n                if (this._ngZone) {\n                    this._ngZone.run(() => menu.setPositionClasses(posX, posY));\n                }\n                else {\n                    menu.setPositionClasses(posX, posY);\n                }\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(menu, positionStrategy) {\n        let [originX, originFallbackX] = menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            if (this._parentMaterialMenu) {\n                if (this._parentInnerPadding == null) {\n                    const firstItem = this._parentMaterialMenu.items.first;\n                    this._parentInnerPadding = firstItem ? firstItem._getHostElement().offsetTop : 0;\n                }\n                offsetY = overlayY === 'bottom' ? this._parentInnerPadding : -this._parentInnerPadding;\n            }\n        }\n        else if (!menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal(menu) {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== menu.templateRef) {\n            this._portal = new TemplatePortal(menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"menu ? \\\"menu\\\" : null\", \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        '[attr.aria-haspopup]': 'menu ? \"menu\" : null',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_SCROLL_STRATEGY]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_PANEL]\n                }, {\n                    type: Optional\n                }] }, { type: MatMenuItem, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i3$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i1.FocusMonitor }, { type: i0.NgZone }]; }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, ViewChild, QueryList, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i3 from '@angular/cdk/platform';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useExisting: MatDrawerContent,\n        },\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatDrawerContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatDrawerContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }]; } });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            // Static inputs in Ivy are set before the element is in the DOM.\n            if (this._isAttached) {\n                this._updatePositionInParent(value);\n            }\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        const activeEl = this._doc.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterViewInit() {\n        this._isAttached = true;\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n        // Only update the DOM position when the sidenav is positioned at\n        // the end since we project the sidenav before the content by default.\n        if (this._position === 'end') {\n            this._updatePositionInParent('end');\n        }\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._anchor?.remove();\n        this._anchor = null;\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    /**\n     * Updates the position of the drawer in the DOM. We need to move the element around ourselves\n     * when it's in the `end` position so that it comes after the content and the visual order\n     * matches the tab order. We also need to be able to move it back to `start` if the sidenav\n     * started off as `end` and was changed to `start`.\n     */\n    _updatePositionInParent(newPosition) {\n        const element = this._elementRef.nativeElement;\n        const parent = element.parentNode;\n        if (newPosition === 'end') {\n            if (!this._anchor) {\n                this._anchor = this._doc.createComment('mat-drawer-anchor');\n                parent.insertBefore(this._anchor, element);\n            }\n            parent.appendChild(element);\n        }\n        else if (this._anchor) {\n            this._anchor.parentNode.insertBefore(element, this._anchor);\n        }\n    }\n}\nMatDrawer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, viewQueries: [{ propertyName: \"_content\", first: true, predicate: [\"content\"], descendants: true }], exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDrawerContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DRAWER_CONTAINER]\n                }] }]; }, propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }], _content: [{\n                type: ViewChild,\n                args: ['content']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end)));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatDrawerContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"directive\", type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatDrawerContent, selector: \"mat-drawer-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], ctorParameters: function () { return [{ type: i4.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useExisting: MatSidenavContent,\n        },\n    ], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: MatSidenavContent,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatSidenavContainer)]\n                }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }]; } });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n}\nMatSidenav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", dependencies: [{ kind: \"directive\", type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable #content>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatSidenavContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"], dependencies: [{ kind: \"directive\", type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatSidenavContent, selector: \"mat-sidenav-content\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer[style*=\\\"visibility: hidden\\\"]{display:none}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSidenavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent], imports: [CommonModule, MatCommonModule, CdkScrollableModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent] });\nMatSidenavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavModule, imports: [CommonModule, MatCommonModule, CdkScrollableModule, CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["Breakpoints","NavComponent","constructor","breakpointObserver","observe","Handset","i0","selectors","decls","vars","consts","template","async","isDate","Subscriber","Notification","delay","scheduler","absoluteDelay","delayFor","now","Math","abs","source","lift","DelayOperator","call","subscriber","subscribe","DelaySubscriber","destination","queue","active","errored","dispatch","state","length","time","shift","notification","max","schedule","unsubscribe","_schedule","add","scheduleNotification","message","DelayMessage","push","_next","value","createNext","_error","err","error","_complete","createComplete","Date","isNaN","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","NgModule","coerceBooleanProperty","MatCommonModule","MatDivider","_vertical","_inset","vertical","inset","ɵfac","ɵcmp","type","args","selector","host","encapsulation","None","changeDetection","OnPush","styles","MatDividerModule","ɵmod","ɵinj","imports","exports","declarations","SecurityContext","Injectable","Optional","Inject","SkipSelf","ErrorHandler","InjectionToken","inject","Attribute","mixinColor","DOCUMENT","of","throwError","forkJoin","Subscription","tap","map","catchError","finalize","share","take","i1","HttpClient","i2","DomSanitizer","policy","getPolicy","undefined","window","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","Error","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","options","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","_svgIconConfigs","Map","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","_document","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","className","set","classNameForFontAlias","get","setDefaultFontSetClass","classNames","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","pipe","svg","getNamedSvgIcon","name","key","iconKey","config","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","ngOnDestroy","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","filter","iconSetConfig","_loadSvgIconSetFromConfig","errorMessage","handleError","foundIcon","i","toString","indexOf","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","appendChild","str","div","createElement","innerHTML","element","attributes","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","delete","configNamespace","svgElement","result","isSafeUrlWithOptions","ɵprov","providedIn","decorators","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","provide","deps","useFactory","_MatIconBase","_elementRef","MAT_ICON_DEFAULT_OPTIONS","MAT_ICON_LOCATION","factory","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","join","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","defaults","_inline","_previousFontSetClass","_currentIconFetch","EMPTY","color","defaultColor","fontSet","nativeElement","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","split","ngOnInit","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","remove","elem","fontSetClasses","forEach","classList","_previousFontIconClass","trim","elements","attrs","elementsWithFuncIri","querySelectorAll","elementWithReference","getAttribute","match","rawName","_svgNamespace","_svgName","ElementRef","exportAs","inputs","MatIconModule","CommonModule","Directive","ContentChildren","ContentChild","forwardRef","EventEmitter","Output","ViewChild","mixinDisabled","mixinDisableRipple","setLines","MatLine","MatLineModule","MatRippleModule","MatPseudoCheckboxModule","Subject","takeUntil","startWith","i3","FocusKeyManager","SelectionModel","hasModifierKey","A","ENTER","SPACE","UP_ARROW","DOWN_ARROW","NG_VALUE_ACCESSOR","_MatListBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","arguments","_stateChanges","ngOnChanges","next","complete","useExisting","providers","MatList","_getListType","MatListAvatarCssMatStyler","ɵdir","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_element","_changeDetectorRef","navList","list","_isInteractiveList","_destroyed","_disabled","_list","_getHostElement","hasAttribute","markForCheck","disabled","ngAfterContentInit","_lines","_isRippleDisabled","disableRipple","ChangeDetectorRef","MatRipple","descendants","_avatar","_icon","_MatSelectionListBase","_MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","selectedChange","checkboxPosition","_inputsInitialized","_color","_value","selected","compareWith","selectedOptions","isSelected","_setSelected","multiple","_reportValueChange","some","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","toggle","getLabel","_text","textContent","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","emit","_markForCheck","MatPseudoCheckbox","NgIf","_focusMonitor","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_markOptionsForCheck","ngDevMode","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","changes","_updateTabIndex","changed","event","added","item","removed","monitor","origin","toFocus","setActiveItem","disableRippleChanges","colorChanges","firstChange","stopMonitoring","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","option","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","min","activeItem","_keydown","keyCode","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","preventDefault","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","correspondingOption","find","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","index","setTimeout","FocusMonitor","MatListModule","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","RIGHT_ARROW","LEFT_ARROW","ESCAPE","QueryList","TemplateRef","Self","merge","asapScheduler","switchMap","trigger","style","transition","animate","TemplatePortal","DomPortalOutlet","i3$1","i1$1","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","CdkScrollableModule","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_attached","attach","context","_portal","detach","_outlet","parentNode","insertBefore","outletElement","isAttached","dispose","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","MatMenuContent","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","focusVia","ngAfterViewInit","removeItem","_getTabIndex","_checkDisabled","stopPropagation","_handleMouseEnter","clone","icons","_setHighlighted","isHighlighted","activeElement","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_classList","_panelAnimationState","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","closed","close","panelId","setPositionClasses","panelClass","classes","previousPanelClass","_previousPanelClass","_updateDirectDescendants","items","focusedItem","itemsList","setNextItemActive","destroy","itemChanges","_item","_handleKeydown","parentMenu","direction","setFocusOrigin","focusFirstItem","onStable","menuPanel","first","closest","contains","setFirstItemActive","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","Object","keys","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","_onAnimationStart","toState","scrollTop","_allItems","reset","notifyOnChanges","NgZone","ariaLabel","ariaLabelledby","ariaDescribedby","templateRef","lazyContent","MatMenu","ngZone","defaultOptions","changeDetectorRef","NgClass","animations","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_MatMenuTriggerBase","_overlay","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","_parentMaterialMenu","addEventListener","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","positionStrategy","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","withLockedPosition","reapplyLastPosition","updatePosition","_setIsMenuOpen","_setMenuElevation","isOpen","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withGrowAfterOpen","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","run","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","_parentInnerPadding","firstItem","offsetTop","withPositions","backdrop","backdropClick","detachments","parentClose","hover","_handleMousedown","button","Directionality","MatMenuTrigger","MatMenuModule","CdkScrollable","i5","i4","coerceNumberProperty","fromEvent","mapTo","distinctUntilChanged","debounceTime","ANIMATION_MODULE_TYPE","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContainer","ScrollDispatcher","MatDrawer","_focusTrapFactory","_platform","_interactivityChecker","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","o","openedStart","e","fromState","_closedStream","closedStart","onPositionChanged","_modeChanged","opened","_takeFocus","_isFocusWithinDrawer","_restoreFocus","_openedVia","runOutsideAngular","disableClose","x","y","_isAttached","_updatePositionInParent","mode","_updateFocusTrapState","autoFocus","_autoFocus","_forceFocus","isFocusable","tabIndex","callback","_focusByCssSelector","elementToFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","focusOrigin","blur","activeEl","ngAfterContentChecked","isBrowser","_anchor","open","openedVia","_closeViaBackdropClick","_setOpen","_getWidth","offsetWidth","enabled","newPosition","parent","createComment","FocusTrapFactory","Platform","InteractivityChecker","_content","viewportRuler","defaultAutosize","_animationMode","_drawers","_doCheckSubject","_contentMargins","left","right","_validateDrawers","updateContentMargins","_autosize","start","_start","end","_end","autosize","_backdropOverride","scrollable","_userContent","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","width","_right","ngDoCheck","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_onBackdropClicked","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_isShowingBackdrop","ViewportRuler","MatSidenavContent","container","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenavModule","_MatToolbarBase","MatToolbarRow","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","Array","from","node","COMMENT_NODE","throwToolbarMixedModesError","MatToolbarModule"],"sourceRoot":"webpack:///"}