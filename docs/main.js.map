{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACD;;;AAEtD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,YAAY,EAAE,GAAG,EAAE,CAAC,6SAAgC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC;QAC9E,2BAA2B;KAC9B;IACD;QACI,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,GAAG,EAAE,CAAC,+YAA8B,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC;KAC9E;CACJ,CAAC;AAOK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;kHAFd,CAAC,+DAAS,CAAC,YAFZ,iEAAoB,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAC/C,yDAAY;mIAGb,gBAAgB,oFAHf,yDAAY;;;;;;;;;;;;;;;;;;;;;ACVnB,MAAM,YAAY;IACrB,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAC3C,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;IACR,CAAC;;wEANQ,YAAY;0GAAZ,YAAY;QCRzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAoB;AACE;AAOK;AACqB;AACX;AACG;AACN;AAET;AACT;;;AAC/C,kDAAkD;AAC3C,MAAM,qBAAqB,GAAG,CAAC,IAAgB,EAAE,EAAE;IACtD;;;;;QAKI;IACJ,OAAO,IAAI,2EAAmB,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACpE,CAAC,CAAC;AAsBK,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFN,wDAAY;0GAfpB,oEAAa;QACb,iEAAgB;QAChB,yFAAuB;QACvB,6DAAY;QACZ,+DAAa;QACb,kEAAgB;QAChB,wEAAuB,CAAC;YACpB,MAAM,EAAE;gBACJ,OAAO,EAAE,gEAAe;gBACxB,UAAU,EAAE,qBAAqB;gBACjC,IAAI,EAAE,CAAC,4DAAU,CAAC;aACrB;SACJ,CAAC;mIAKG,SAAS,mBAnBH,wDAAY,aAEvB,oEAAa;QACb,iEAAgB;QAChB,yFAAuB;QACvB,6DAAY;QACZ,+DAAa;QACb,kEAAgB;;;;;;;;;;;;;;;;;;;AC9BjB,MAAM,SAAS;IAClB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,WAAW;QACP,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAE1B,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IAChB,CAAC;;kEAdQ,SAAS;0GAAT,SAAS,WAAT,SAAS;;;;;;;;;;;;;;;ACLtB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/guard/auth.guard.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './shared/guard/auth.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        loadChildren: () => import('./layout/layout.module').then(m => m.LayoutModule),\r\n        // canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'login',\r\n        loadChildren: () => import('./login/login.module').then(m => m.LoginModule)\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n    exports: [RouterModule],\r\n    providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    constructor(private translate: TranslateService) {\r\n        translate.setDefaultLang('en');\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","<router-outlet></router-outlet>","import { LayoutModule } from '@angular/cdk/layout';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n// AoT requires an exported function for factories\r\nexport const createTranslateLoader = (http: HttpClient) => {\r\n    /* for development\r\n    return new TranslateHttpLoader(\r\n        http,\r\n        '/start-javascript/sb-admin-material/master/dist/assets/i18n/',\r\n        '.json'\r\n    );*/\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n};\r\n\r\n@NgModule({\r\n    declarations: [AppComponent],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        LayoutModule,\r\n        OverlayModule,\r\n        HttpClientModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: createTranslateLoader,\r\n                deps: [HttpClient]\r\n            }\r\n        })\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate() {\r\n        console.log(localStorage);\r\n\r\n        if (localStorage.getItem('isLoggedin')) {\r\n            console.log('if');\r\n\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/login']);\r\n        return true;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}