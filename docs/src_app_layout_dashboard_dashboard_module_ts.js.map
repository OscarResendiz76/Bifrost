{"version":3,"file":"src_app_layout_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/layout/dashboard/dashboard-routing.module.ts","./src/app/layout/dashboard/dashboard.component.ts","./src/app/layout/dashboard/dashboard.component.html","./src/app/layout/dashboard/dashboard.module.ts","./src/app/shared/modules/stat/stat.component.ts","./src/app/shared/modules/stat/stat.component.html","./src/app/shared/modules/stat/stat.module.ts","./node_modules/@angular/cdk/fesm2020/table.mjs","./node_modules/@angular/material/fesm2020/card.mjs","./node_modules/@angular/material/fesm2020/grid-list.mjs","./node_modules/@angular/material/fesm2020/table.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DashboardRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\n\nexport interface PeriodicElement {\n    name: string;\n    position: number;\n    weight: number;\n    symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' }\n];\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n    displayedColumns = ['position', 'name', 'weight', 'symbol'];\n    dataSource = new MatTableDataSource(ELEMENT_DATA);\n    places: Array<any> = [];\n\n    applyFilter(filterValue: string) {\n        filterValue = filterValue.trim(); // Remove whitespace\n        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n        this.dataSource.filter = filterValue;\n    }\n\n    constructor() {\n        this.places = [\n            {\n                imgSrc: 'assets/images/card-1.jpg',\n                place: 'Cozy 5 Stars Apartment',\n                description:\n                    // tslint:disable-next-line:max-line-length\n                    'The place is close to Barceloneta Beach and bus stop just 2 min by walk and near to \"Naviglio\" where you can enjoy the main night life in Barcelona.',\n                charge: '$899/night',\n                location: 'Barcelona, Spain'\n            },\n            {\n                imgSrc: 'assets/images/card-2.jpg',\n                place: 'Office Studio',\n                description:\n                    // tslint:disable-next-line:max-line-length\n                    'The place is close to Metro Station and bus stop just 2 min by walk and near to \"Naviglio\" where you can enjoy the night life in London, UK.',\n                charge: '$1,119/night',\n                location: 'London, UK'\n            },\n            {\n                imgSrc: 'assets/images/card-3.jpg',\n                place: 'Beautiful Castle',\n                description:\n                    // tslint:disable-next-line:max-line-length\n                    'The place is close to Metro Station and bus stop just 2 min by walk and near to \"Naviglio\" where you can enjoy the main night life in Milan.',\n                charge: '$459/night',\n                location: 'Milan, Italy'\n            }\n        ];\n    }\n\n    ngOnInit() {}\n}\n","<div class=\"mb-20\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxFlex fxLayoutGap=\"20px\">\n    <div fxFlex>\n        <app-stat [bgClass]=\"'danger'\" [icon]=\"'dashboard'\" [count]=\"13\" [label]=\"'New Tickets!'\"></app-stat>\n    </div>\n    <div fxFlex>\n        <app-stat [bgClass]=\"'warn'\" [icon]=\"'view_list'\" [count]=\"12\" [label]=\"'New task!'\"></app-stat>\n    </div>\n    <div fxFlex>\n        <app-stat [bgClass]=\"'success'\" [icon]=\"'shopping_cart'\" [count]=\"124\" [label]=\"'New Orders!'\"></app-stat>\n    </div>\n    <div fxFlex>\n        <app-stat [bgClass]=\"'info'\" [icon]=\"'contact_support'\" [count]=\"13\" [label]=\"'New Tickets!'\"></app-stat>\n    </div>\n</div>\n\n<div class=\"mb-20\" flFlex flexLayout=\"row\" flexLayout.lt-md=\"column\">\n    <div fxFlex>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n            <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef> No. </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef> Name </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"weight\">\n                <th mat-header-cell *matHeaderCellDef> Weight </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n            </ng-container>\n            <ng-container matColumnDef=\"symbol\">\n                <th mat-header-cell *matHeaderCellDef> Symbol </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n</div>\n\n<div class=\"mb-20\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxFlex fxLayoutGap=\"20px\">\n    <div fxFlex *ngFor=\"let item of places\">\n        <mat-card>\n            <img mat-card-image [src]=\"item.imgSrc\">\n            <mat-card-header style=\"justify-content: center\">\n                <mat-card-title>\n                    <h3 class=\"m-0\">{{item.place}}</h3>\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <p>\n                    {{item.description}}\n                </p>\n            </mat-card-content>\n\n            <mat-card-actions>\n                <button mat-button>{{item.charge}}</button>\n                <button mat-button>\n                    <mat-icon class=\"nav-icon\">location_on</mat-icon> {{item.location}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\nimport { StatModule } from '../../shared/modules/stat/stat.module';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DashboardRoutingModule,\n        MatGridListModule,\n        StatModule,\n        MatCardModule,\n        MatCardModule,\n        MatTableModule,\n        MatButtonModule,\n        MatIconModule,\n        FlexLayoutModule.withConfig({addFlexToParent: false})\n    ],\n    declarations: [DashboardComponent]\n})\nexport class DashboardModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-stat',\n    templateUrl: './stat.component.html',\n    styleUrls: ['./stat.component.scss']\n})\nexport class StatComponent implements OnInit {\n    @Input() bgClass: string;\n    @Input() icon: string;\n    @Input() count: number;\n    @Input() label: string;\n    @Input() data: number;\n\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<mat-card [ngClass]=\"bgClass\">\n    <mat-card-header>\n        <div mat-card-avatar>\n            <mat-icon class=\"icon-lg\">{{icon}}</mat-icon>\n        </div>\n        <mat-card-title>{{count}}</mat-card-title>\n        <mat-card-subtitle>{{label}}</mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-actions>\n        <a href=\"javascript:void(0)\" class=\"float-right card-inverse\">\n            View Details\n        </a>\n    </mat-card-actions>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StatComponent } from './stat.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n    imports: [CommonModule, MatCardModule, MatGridListModule, MatIconModule],\n    declarations: [StatComponent],\n    exports: [StatComponent]\n})\nexport class StatModule {}\n","import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* _ViewRepeaterOperation.INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardContent {\n}\nMatCardContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardContent, selector: \"mat-card-content, [mat-card-content], [matCardContent]\", host: { classAttribute: \"mat-card-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                    host: { 'class': 'mat-card-content' },\n                }]\n        }] });\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardTitle, selector: \"mat-card-title, [mat-card-title], [matCardTitle]\", host: { classAttribute: \"mat-card-title\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                    host: {\n                        'class': 'mat-card-title',\n                    },\n                }]\n        }] });\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardSubtitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardSubtitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardSubtitle, selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\", host: { classAttribute: \"mat-card-subtitle\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardSubtitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                    host: {\n                        'class': 'mat-card-subtitle',\n                    },\n                }]\n        }] });\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /** Position of the actions inside the card. */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardActions, selector: \"mat-card-actions\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-card-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-card-actions\" }, exportAs: [\"matCardActions\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-actions',\n                    exportAs: 'matCardActions',\n                    host: {\n                        'class': 'mat-card-actions',\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardFooter, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardFooter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardFooter, selector: \"mat-card-footer\", host: { classAttribute: \"mat-card-footer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardFooter, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-card-footer',\n                    host: { 'class': 'mat-card-footer' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardImage, selector: \"[mat-card-image], [matCardImage]\", host: { classAttribute: \"mat-card-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-image], [matCardImage]',\n                    host: { 'class': 'mat-card-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardSmImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardSmImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardSmImage, selector: \"[mat-card-sm-image], [matCardImageSmall]\", host: { classAttribute: \"mat-card-sm-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardSmImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\n                    host: { 'class': 'mat-card-sm-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardMdImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardMdImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardMdImage, selector: \"[mat-card-md-image], [matCardImageMedium]\", host: { classAttribute: \"mat-card-md-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardMdImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\n                    host: { 'class': 'mat-card-md-image' },\n                }]\n        }] });\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardLgImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardLgImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardLgImage, selector: \"[mat-card-lg-image], [matCardImageLarge]\", host: { classAttribute: \"mat-card-lg-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardLgImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\n                    host: { 'class': 'mat-card-lg-image' },\n                }]\n        }] });\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardXlImage, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardXlImage.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardXlImage, selector: \"[mat-card-xl-image], [matCardImageXLarge]\", host: { classAttribute: \"mat-card-xl-image\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardXlImage, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                    host: { 'class': 'mat-card-xl-image' },\n                }]\n        }] });\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatCardAvatar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardAvatar, selector: \"[mat-card-avatar], [matCardAvatar]\", host: { classAttribute: \"mat-card-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-card-avatar], [matCardAvatar]',\n                    host: { 'class': 'mat-card-avatar' },\n                }]\n        }] });\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCard, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatCard.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCard, selector: \"mat-card\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-card mat-focus-indicator\" }, exportAs: [\"matCard\"], ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\", styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card._mat-animation-noopable{transition:none !important;animation:none !important}.mat-card>.mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card>.mat-divider-horizontal{left:auto;right:0}.mat-card>.mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card>.mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCard, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card', exportAs: 'matCard', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-card mat-focus-indicator',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\", styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card._mat-animation-noopable{transition:none !important;animation:none !important}.mat-card>.mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card>.mat-divider-horizontal{left:auto;right:0}.mat-card>.mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card>.mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px;display:block;overflow:hidden}.mat-card-image img{width:100%}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatCardHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardHeader, selector: \"mat-card-header\", host: { classAttribute: \"mat-card-header\" }, ngImport: i0, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-card-header' }, template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardTitleGroup, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatCardTitleGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCardTitleGroup, selector: \"mat-card-title-group\", host: { classAttribute: \"mat-card-title-group\" }, ngImport: i0, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardTitleGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-card-title-group', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { 'class': 'mat-card-title-group' }, template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\" }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatCardModule {\n}\nMatCardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatCardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardModule, declarations: [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar], imports: [MatCommonModule], exports: [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule] });\nMatCardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatCard,\n                        MatCardHeader,\n                        MatCardTitleGroup,\n                        MatCardContent,\n                        MatCardTitle,\n                        MatCardSubtitle,\n                        MatCardActions,\n                        MatCardFooter,\n                        MatCardSmImage,\n                        MatCardMdImage,\n                        MatCardLgImage,\n                        MatCardImage,\n                        MatCardXlImage,\n                        MatCardAvatar,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() {\n        return this.rowIndex + 1;\n    }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while (gapEndIndex - gapStartIndex < tileCols || gapEndIndex == 0);\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridTile {\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() {\n        return this._rowspan;\n    }\n    set rowspan(value) {\n        this._rowspan = Math.round(coerceNumberProperty(value));\n    }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() {\n        return this._colspan;\n    }\n    set colspan(value) {\n        this._colspan = Math.round(coerceNumberProperty(value));\n    }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n        this._element.nativeElement.style[property] = value;\n    }\n}\nMatGridTile.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTile, deps: [{ token: i0.ElementRef }, { token: MAT_GRID_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatGridTile.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatGridTile, selector: \"mat-grid-tile\", inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, host: { properties: { \"attr.rowspan\": \"rowspan\", \"attr.colspan\": \"colspan\" }, classAttribute: \"mat-grid-tile\" }, exportAs: [\"matGridTile\"], ngImport: i0, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTile, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile', exportAs: 'matGridTile', host: {\n                        'class': 'mat-grid-tile',\n                        // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                        // the DOM. This is needed for the grid-tile harness.\n                        '[attr.rowspan]': 'rowspan',\n                        '[attr.colspan]': 'colspan',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_GRID_LIST]\n                }] }]; }, propDecorators: { rowspan: [{\n                type: Input\n            }], colspan: [{\n                type: Input\n            }] } });\nclass MatGridTileText {\n    constructor(_element) {\n        this._element = _element;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTileText, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatGridTileText.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatGridTileText, selector: \"mat-grid-tile-header, mat-grid-tile-footer\", queries: [{ propertyName: \"_lines\", predicate: MatLine, descendants: true }], ngImport: i0, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTileText, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile-header, mat-grid-tile-footer', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }] } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatGridAvatarCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatGridAvatarCssMatStyler, selector: \"[mat-grid-avatar], [matGridAvatar]\", host: { classAttribute: \"mat-grid-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-grid-avatar], [matGridAvatar]',\n                    host: { 'class': 'mat-grid-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatGridTileHeaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatGridTileHeaderCssMatStyler, selector: \"mat-grid-tile-header\", host: { classAttribute: \"mat-grid-tile-header\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-header',\n                    host: { 'class': 'mat-grid-tile-header' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTileFooterCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatGridTileFooterCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatGridTileFooterCssMatStyler, selector: \"mat-grid-tile-footer\", host: { classAttribute: \"mat-grid-tile-footer\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridTileFooterCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-footer',\n                    host: { 'class': 'mat-grid-tile-footer' },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() {\n        return null;\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return ['height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom',\n            calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`),\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() {\n        return this._cols;\n    }\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() {\n        return this._gutter;\n    }\n    set gutterSize(value) {\n        this._gutter = `${value == null ? '' : value}`;\n    }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() {\n        return this._rowHeight;\n    }\n    set rowHeight(value) {\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n        if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` + `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        const tracker = this._tileCoordinator;\n        const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((tile, index) => {\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridList, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatGridList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatGridList, selector: \"mat-grid-list\", inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, host: { properties: { \"attr.cols\": \"cols\" }, classAttribute: \"mat-grid-list\" }, providers: [\n        {\n            provide: MAT_GRID_LIST,\n            useExisting: MatGridList,\n        },\n    ], queries: [{ propertyName: \"_tiles\", predicate: MatGridTile, descendants: true }], exportAs: [\"matGridList\"], ngImport: i0, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-list', exportAs: 'matGridList', host: {\n                        'class': 'mat-grid-list',\n                        // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                        // needed for the grid-list harness.\n                        '[attr.cols]': 'cols',\n                    }, providers: [\n                        {\n                            provide: MAT_GRID_LIST,\n                            useExisting: MatGridList,\n                        },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { _tiles: [{\n                type: ContentChildren,\n                args: [MatGridTile, { descendants: true }]\n            }], cols: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatGridListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridListModule, declarations: [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler], imports: [MatLineModule, MatCommonModule], exports: [MatGridList,\n        MatGridTile,\n        MatGridTileText,\n        MatLineModule,\n        MatCommonModule,\n        MatGridTileHeaderCssMatStyler,\n        MatGridTileFooterCssMatStyler,\n        MatGridAvatarCssMatStyler] });\nMatGridListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridListModule, imports: [MatLineModule, MatCommonModule, MatLineModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatGridListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatCommonModule],\n                    exports: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                    declarations: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { kind: \"directive\", type: MatCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule, \n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTableModule, imports: [CdkTableModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n"],"names":["i1","coerceBooleanProperty","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","i2","i3","ScrollingModule","DOCUMENT","i0","InjectionToken","Directive","Inject","Optional","Input","ContentChild","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","EventEmitter","NgZone","Attribute","SkipSelf","Output","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","mixinHasStickyInput","base","constructor","args","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","TemplateRef","ɵdir","type","selector","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","name","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","value","replace","provide","useExisting","inputs","providers","undefined","decorators","cell","headerCell","footerCell","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","ElementRef","host","CdkFooterCell","_elementRef","nodeType","tableRole","getAttribute","role","setAttribute","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","onStable","ɵprov","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","IterableDiffers","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","ViewContainerRef","CdkHeaderRow","ɵcmp","changeDetection","Default","encapsulation","None","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","useClass","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","viewChange","Number","MAX_VALUE","nodeName","trackBy","_trackByFn","fn","ngDevMode","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","$implicit","isInAngularZone","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","when","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","first","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","ChangeDetectorRef","Directionality","Platform","ViewportRuler","useValue","exportAs","styles","static","descendants","array","concat","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","ɵmod","ɵinj","exports","declarations","imports","ANIMATION_MODULE_TYPE","MatCommonModule","MatCardContent","MatCardTitle","MatCardSubtitle","MatCardActions","align","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","MatCard","_animationMode","OnPush","MatCardHeader","MatCardTitleGroup","MatCardModule","setLines","MatLine","MatLineModule","coerceNumberProperty","TileCoordinator","columnIndex","rowCount","rowspan","lastRowMax","Math","max","tracker","update","numColumns","tiles","fill","tile","_trackTile","gapStartIndex","_findMatchingGap","colspan","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","col","MAT_GRID_LIST","MatGridTile","_element","_gridList","_rowspan","_colspan","round","_setStyle","property","MatGridTileText","ngAfterContentInit","_lines","MatGridAvatarCssMatStyler","MatGridTileHeaderCssMatStyler","MatGridTileFooterCssMatStyler","cssCalcAllowedValue","TileStyler","_rows","init","gutterSize","cols","_gutterSize","normalizeUnits","_cols","_direction","getBaseTileSize","sizePercent","gutterFraction","getTilePosition","baseSize","calc","getTileSize","span","setStyle","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","side","getGutterSpan","getTileSpan","tileHeight","getComputedHeight","FixedTileStyler","fixedRowHeight","test","reset","list","_setListStyle","_tiles","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_gutter","rowHeight","_rowHeight","newValue","_setTileStyler","_checkCols","_checkRowHeight","_layoutTiles","_tileStyler","_tileCoordinator","pos","MatGridListModule","ɵTileCoordinator","_isNumberValue","merge","combineLatest","MatRecycleRows","MatTable","arguments","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","sort","active","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","_filterData","_sort","paginator","_paginator","sortChange","initialized","pageChange","page","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","then","lastPageIndex","ceil","newPageIndex","min","MatTableDataSource"],"sourceRoot":"webpack:///"}